# -*- coding: utf-8 -*-
"""Ex_ 5 Kriti Goma.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UAkgXnR1IB16V6sGcbLD14pi84pXRcpV
"""

# If haven't downloaded it yet, please get the data file with wget
!wget https://www.dropbox.com/s/xvjzaxzz3ysphme/data_000637.txt -P ./data/

import pandas as pd

############# QUES 1 ###############
N=79000
df = pd.read_csv('./data/data_000637.txt', sep=',',nrows=N)
df
df.describe()

####################### QUES 2 ####################
import pandas as pd
N =69000
df = pd.read_csv('./data/data_000637.txt', sep=',',nrows= N)
df

for i in range (N):
    if df.iloc[i]['BX_COUNTER'] == 0:
        print("The BX counter resets at row: ", i, " Value: ", df.iloc[i]['BX_COUNTER'])
        print("The maximum value before being reset to 0:", df.iloc[i-1]['BX_COUNTER'], "\t Row: ", i-1)
        x = df.iloc[i-1]['BX_COUNTER']
        break
print("x =", x)

################## QUES 3 ################
N = 79000
df = pd.read_csv('./data/data_000637.txt', sep=',',nrows=N)
df
df = df.assign(ABSOLUTE_TIME=df['BX_COUNTER'] + df['TDC_MEAS'] +df['ORBIT_CNT'])
df/10**9

############## QUES 4 ##################
N=69000
df = pd.read_csv('data_000637.txt', sep=',',nrows=N)
df

df['DURATION_MEASUREMENT'] = pd.to_timedelta(df['ABSOLUTE_TIME'])
print("The duration of each measurement:", df['DURATION_MEASUREMENT'][0:5].diff())
print("The duration of the whole data taking:", (df['DURATION_MEASUREMENT'].max() - df['DURATION_MEASUREMENT'].min()))

###################### QUES 5 ###########3
N=79000
df = pd.read_csv('./data/data_000637.txt', sep=',',nrows=N)
df
print(" The top 3 TDC_CHANNELS: ", df.groupby('HEAD')['TDC_CHANNEL'].nlargest(3))

########### QUES 6 ############
N=79000
df = pd.read_csv('./data/data_000637.txt', sep=',',nrows=N)
df
count = df.ORBIT_CNT.unique().size
print("The number of orbits with at least one hit is " + str(count))

############### QUES 7 ###########
N= 79000
df = pd.read_csv('./data/data_000637.txt', sep=',',nrows=N)
df
unique_orbits = pd.DataFrame(df[df['TDC_CHANNEL'] == 139]).drop_duplicates(subset=['ORBIT_CNT'], inplace=False)
print("\nThe number of unique orbits with at least one measurement from TDC_CHANNEL = 139 is ", len(unique_orbits))