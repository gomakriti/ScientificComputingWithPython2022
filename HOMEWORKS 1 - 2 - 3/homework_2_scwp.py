# -*- coding: utf-8 -*-
"""Homework 2 Scwp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HLzgxV3S9xK9DqdbYkL1KORsv6-x6Fjg
"""

############ TASK 1 ############
x= 5 #global variable

def f(alist,x):

    for i in range(5):
        alist = alist + [i,]
    return alist

alist = [1, 2, 3]

ans = f(alist,x)

print(ans)
print(alist)

##### second way ####

def f(alist, x):
    for i in range(x):
        alist.append(i)
    return alist

alist = [1, 2, 3]
ans = f(alist, 5)
print(ans)
print(alist)

############### TASK 2 ############
new_list = [x*x for x in range(10) if x % 2 == 1]
print(new_list)

################## TASK 3 ###################

words = ["helllloooe", "oopopu", "gjhghkhjr", "blo", "hui"]

def wordsss_4(word):
    if len(word) < 4:
        return True
    return False

print(list(filter(wordsss_4, words)))

##################### Task 4 #######################

lang = {"Python" : 3, "Java" : '', "Cplusplus" : 'test', "Php" : 0.7}

def lengthOfKeys(key):
    return len(key)

print(list(map(lengthOfKeys, lang.keys())))

############ TASK 5 ##########
language_scores = [('Python', 97), ('Cplusplus', 81), ('Php', 45), ('Java', 32)]
language_scores.sort(key=lambda s: s[0])
print(language_scores)

################ TASK 6 ##########33
def square(num):
    return num**2

def cube(num):
    return num**3

def sixthPower(num):
    return square(cube(num))

print(sixthPower(2))

################ Task 7 #####################
def hello(func):
    def wrapper(*args, **kwargs):
        func(*args, **kwargs)
        print("Hello World!")
    return wrapper

@hello
def square(x):
    return x*x
square(10)
square(10)
square(10)

########### task 8 ##############
def fibonacci(x):
    if x <= 1:
        return x
    else:
        return (fibonacci(x-1) + fibonacci(x-2))
for i in range(20):
    print(fibonacci(i))

################### Task 9 ################
import timeit

def lab1(x):
    i=0
    j=1
    count = 0

    while count <= x:
        print(i)
        k = i + j
        i = j
        j = k
        count += 1

def lab2(x):
    if x <= 1:
        return x
    else:
        return (lab2(x-1) + lab2(x-2))

starttime = timeit.default_timer()
lab1(20)
endtime = timeit.default_timer()

print("With while loop, time is: ", endtime-starttime)

starttime = timeit.default_timer()
lab2(20)
endtime = timeit.default_timer()

print("With recursive, time is: ", endtime-starttime)

############### TASK 10 ############
## I Couldn't solve ###

######### TASK 11 ########
# I couldn't solve ######